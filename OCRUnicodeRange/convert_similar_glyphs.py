# Used when creating data with pdfs

cjk_comp_ideo_to_unif_dict = {
    0xf900: chr(0x8c48),
    0xf901: chr(0x66f4),
    0xf902: chr(0x8eca),
    0xf903: chr(0x8cc8),
    0xf904: chr(0x6ed1),
    0xf905: chr(0x4e32),
    0xf906: chr(0x53e5),
    0xf907: chr(0x9f9c),
    0xf908: chr(0x9f9c),
    0xf909: chr(0x5951),
    0xf90a: chr(0x91d1),
    0xf90b: chr(0x5587),
    0xf90c: chr(0x5948),
    0xf90d: chr(0x61f6),
    0xf90e: chr(0x7669),
    0xf90f: chr(0x7f85),
    0xf910: chr(0x863f),
    0xf911: chr(0x87ba),
    0xf912: chr(0x88f8),
    0xf913: chr(0x908f),
    0xf914: chr(0x6a02),
    0xf915: chr(0x6d1b),
    0xf916: chr(0x70d9),
    0xf917: chr(0x73de),
    0xf918: chr(0x843d),
    0xf919: chr(0x916a),
    0xf91a: chr(0x99f1),
    0xf91b: chr(0x4e82),
    0xf91c: chr(0x5375),
    0xf91d: chr(0x6b04),
    0xf91e: chr(0x721b),
    0xf91f: chr(0x862d),
    0xf920: chr(0x9e1e),
    0xf921: chr(0x5d50),
    0xf922: chr(0x6feb),
    0xf923: chr(0x85cd),
    0xf924: chr(0x8964),
    0xf925: chr(0x62c9),
    0xf926: chr(0x81d8),
    0xf927: chr(0x881f),
    0xf928: chr(0x5eca),
    0xf929: chr(0x6717),
    0xf92a: chr(0x6d6a),
    0xf92b: chr(0x72fc),
    0xf92c: chr(0x90de),
    0xf92d: chr(0x4f86),
    0xf92e: chr(0x51b7),
    0xf92f: chr(0x52de),
    0xf930: chr(0x64c4),
    0xf931: chr(0x6ad3),
    0xf932: chr(0x7210),
    0xf933: chr(0x76e7),
    0xf934: chr(0x8001),
    0xf935: chr(0x8606),
    0xf936: chr(0x865c),
    0xf937: chr(0x8def),
    0xf938: chr(0x9732),
    0xf939: chr(0x9b6f),
    0xf93a: chr(0x9dfa),
    0xf93b: chr(0x788c),
    0xf93c: chr(0x797f),
    0xf93d: chr(0x7da0),
    0xf93e: chr(0x83c9),
    0xf93f: chr(0x9304),
    0xf940: chr(0x9e7f),
    0xf941: chr(0x8ad6),
    0xf942: chr(0x58df),
    0xf943: chr(0x5f04),
    0xf944: chr(0x7c60),
    0xf945: chr(0x807e),
    0xf946: chr(0x7262),
    0xf947: chr(0x78ca),
    0xf948: chr(0x8cc2),
    0xf949: chr(0x96f7),
    0xf94a: chr(0x58d8),
    0xf94b: chr(0x5c62),
    0xf94c: chr(0x6a13),
    0xf94d: chr(0x6dda),
    0xf94e: chr(0x6f0f),
    0xf94f: chr(0x7d2f),
    0xf950: chr(0x7e37),
    0xf951: chr(0x964b),
    0xf952: chr(0x52d2),
    0xf953: chr(0x808b),
    0xf954: chr(0x51dc),
    0xf955: chr(0x51cc),
    0xf956: chr(0x7a1c),
    0xf957: chr(0x7dbe),
    0xf958: chr(0x83f1),
    0xf959: chr(0x9675),
    0xf95a: chr(0x8b80),
    0xf95b: chr(0x62cf),
    0xf95c: chr(0x6a02),
    0xf95d: chr(0x8afe),
    0xf95e: chr(0x4e39),
    0xf95f: chr(0x5be7),
    0xf960: chr(0x6012),
    0xf961: chr(0x7387),
    0xf962: chr(0x7570),
    0xf963: chr(0x5317),
    0xf964: chr(0x78fb),
    0xf965: chr(0x4fbf),
    0xf966: chr(0x5fa9),
    0xf967: chr(0x4e0d),
    0xf968: chr(0x6ccc),
    0xf969: chr(0x6578),
    0xf96a: chr(0x7d22),
    0xf96b: chr(0x53c3),
    0xf96c: chr(0x585e),
    0xf96d: chr(0x7701),
    0xf96e: chr(0x8449),
    0xf96f: chr(0x8aaa),
    0xf970: chr(0x6bba),
    0xf971: chr(0x8fb0),
    0xf972: chr(0x6c88),
    0xf973: chr(0x62fe),
    0xf974: chr(0x82e5),
    0xf975: chr(0x63a0),
    0xf976: chr(0x7565),
    0xf977: chr(0x4eae),
    0xf978: chr(0x5169),
    0xf979: chr(0x51c9),
    0xf97a: chr(0x6881),
    0xf97b: chr(0x7ce7),
    0xf97c: chr(0x826f),
    0xf97d: chr(0x8ad2),
    0xf97e: chr(0x91cf),
    0xf97f: chr(0x52f5),
    0xf980: chr(0x5442),
    0xf981: chr(0x5973),
    0xf982: chr(0x5eec),
    0xf983: chr(0x65c5),
    0xf984: chr(0x6ffe),
    0xf985: chr(0x792a),
    0xf986: chr(0x95ad),
    0xf987: chr(0x9a6a),
    0xf988: chr(0x9e97),
    0xf989: chr(0x9ece),
    0xf98a: chr(0x529b),
    0xf98b: chr(0x66c6),
    0xf98c: chr(0x6b77),
    0xf98d: chr(0x8f62),
    0xf98e: chr(0x5e74),
    0xf98f: chr(0x6190),
    0xf990: chr(0x6200),
    0xf991: chr(0x649a),
    0xf992: chr(0x6f23),
    0xf993: chr(0x7149),
    0xf994: chr(0x7489),
    0xf995: chr(0x79ca),
    0xf996: chr(0x7df4),
    0xf997: chr(0x806f),
    0xf998: chr(0x8f26),
    0xf999: chr(0x84ee),
    0xf99a: chr(0x9023),
    0xf99b: chr(0x934a),
    0xf99c: chr(0x5217),
    0xf99d: chr(0x52a3),
    0xf99e: chr(0x54bd),
    0xf99f: chr(0x70c8),
    0xf9a0: chr(0x88c2),
    0xf9a1: chr(0x8aaa),
    0xf9a2: chr(0x5ec9),
    0xf9a3: chr(0x5ff5),
    0xf9a4: chr(0x637b),
    0xf9a5: chr(0x6bae),
    0xf9a6: chr(0x7c3e),
    0xf9a7: chr(0x7375),
    0xf9a8: chr(0x4ee4),
    0xf9a9: chr(0x56f9),
    0xf9aa: chr(0x5be7),
    0xf9ab: chr(0x5dba),
    0xf9ac: chr(0x601c),
    0xf9ad: chr(0x73b2),
    0xf9ae: chr(0x7469),
    0xf9af: chr(0x7f9a),
    0xf9b0: chr(0x8046),
    0xf9b1: chr(0x9234),
    0xf9b2: chr(0x96f6),
    0xf9b3: chr(0x9748),
    0xf9b4: chr(0x9818),
    0xf9b5: chr(0x4f8b),
    0xf9b6: chr(0x79ae),
    0xf9b7: chr(0x91b4),
    0xf9b8: chr(0x96b7),
    0xf9b9: chr(0x60e1),
    0xf9ba: chr(0x4e86),
    0xf9bb: chr(0x50da),
    0xf9bc: chr(0x5bee),
    0xf9bd: chr(0x5c3f),
    0xf9be: chr(0x6599),
    0xf9bf: chr(0x6a02),
    0xf9c0: chr(0x71ce),
    0xf9c1: chr(0x7642),
    0xf9c2: chr(0x84fc),
    0xf9c3: chr(0x907c),
    0xf9c4: chr(0x9f8d),
    0xf9c5: chr(0x6688),
    0xf9c6: chr(0x962e),
    0xf9c7: chr(0x5289),
    0xf9c8: chr(0x677b),
    0xf9c9: chr(0x67f3),
    0xf9ca: chr(0x6d41),
    0xf9cb: chr(0x6e9c),
    0xf9cc: chr(0x7409),
    0xf9cd: chr(0x7559),
    0xf9ce: chr(0x786b),
    0xf9cf: chr(0x7d10),
    0xf9d0: chr(0x985e),
    0xf9d1: chr(0x516d),
    0xf9d2: chr(0x622e),
    0xf9d3: chr(0x9678),
    0xf9d4: chr(0x502b),
    0xf9d5: chr(0x5d19),
    0xf9d6: chr(0x6dea),
    0xf9d7: chr(0x8f2a),
    0xf9d8: chr(0x5f8b),
    0xf9d9: chr(0x6144),
    0xf9da: chr(0x6817),
    0xf9db: chr(0x7387),
    0xf9dc: chr(0x9686),
    0xf9dd: chr(0x5229),
    0xf9de: chr(0x540f),
    0xf9df: chr(0x5c65),
    0xf9e0: chr(0x6613),
    0xf9e1: chr(0x674e),
    0xf9e2: chr(0x68a8),
    0xf9e3: chr(0x6ce5),
    0xf9e4: chr(0x7406),
    0xf9e5: chr(0x75e2),
    0xf9e6: chr(0x7f79),
    0xf9e7: chr(0x88cf),
    0xf9e8: chr(0x88e1),
    0xf9e9: chr(0x91cc),
    0xf9ea: chr(0x96e2),
    0xf9eb: chr(0x533f),
    0xf9ec: chr(0x6eba),
    0xf9ed: chr(0x541d),
    0xf9ee: chr(0x71d0),
    0xf9ef: chr(0x7498),
    0xf9f0: chr(0x85fa),
    0xf9f1: chr(0x96a3),
    0xf9f2: chr(0x9c57),
    0xf9f3: chr(0x9e9f),
    0xf9f4: chr(0x6797),
    0xf9f5: chr(0x6dcb),
    0xf9f6: chr(0x81e8),
    0xf9f7: chr(0x7acb),
    0xf9f8: chr(0x7b20),
    0xf9f9: chr(0x7c92),
    0xf9fa: chr(0x72c0),
    0xf9fb: chr(0x7099),
    0xf9fc: chr(0x8b58),
    0xf9fd: chr(0x4ec0),
    0xf9fe: chr(0x8336),
    0xf9ff: chr(0x523a),
    0xfa00: chr(0x5207),
    0xfa01: chr(0x5ea6),
    0xfa02: chr(0x62d3),
    0xfa03: chr(0x7cd6),
    0xfa04: chr(0x5b85),
    0xfa05: chr(0x6d1e),
    0xfa06: chr(0x66b4),
    0xfa07: chr(0x8f3b),
    0xfa08: chr(0x884c),
    0xfa09: chr(0x964d),
    0xfa0a: chr(0x898b),
    0xfa0b: chr(0x5ed3),
}

exclude_greek = {# Greek and Coptic 
    0x037e: chr(0x003b), # ; ; GREEK QUESTION MARK
    0x0384: chr(0x0027), # ΄ ' GREEK TONOS
    0x0387: chr(0x00b7), # · · Greek Ano Teleia
    0x0391: chr(0x0041), # Α A GREEK CAPITAL LETTER ALPHA
    0x0392: chr(0x0042), # Β B GREEK CAPITAL LETTER BETA
    0x0394: chr(0x2206), ### Δ ∆ GREEK CAPITAL LETTER DELTA
    0x0395: chr(0x0045), # Ε E GREEK CAPITAL LETTER EPSILON
    0x0396: chr(0x005a), # Ζ Z GREEK CAPITAL LETTER ZETA
    0x0397: chr(0x0048), # Η H GREEK CAPITAL LETTER ETA
    0x0399: chr(0x0049), # Ι I GREEK CAPITAL LETTER IOTA
    0x039a: chr(0x004b), # Κ K GREEK CAPITAL LETTER KAPPA
    0x039c: chr(0x004d), # Μ M GREEK CAPITAL LETTER MU
    0x039d: chr(0x004e), # Ν N GREEK CAPITAL LETTER NU
    0x039f: chr(0x004f), # Ο O GREEK CAPITAL LETTER OMICRON
    0x03a0: chr(0x220F), ### Π ∏ GREEK CAPITAL LETTER PI
    0x03a1: chr(0x0050), # Ρ P GREEK CAPITAL LETTER RHO
    0x03a3: chr(0x2211), ### Σ ∑ GREEK CAPITAL LETTER SIGMA
    0x03a4: chr(0x0054), # Τ T GREEK CAPITAL LETTER TAU
    0x03a5: chr(0x0059), # Υ Y GREEK CAPITAL LETTER UPSILON
    0x03a7: chr(0x0058), # Χ X GREEK CAPITAL LETTER CHI
    0x03b9: chr(0x006c), # ι l GREEK SMALL LETTER IOTA
    0x03ba: chr(0x006b), # κ k GREEK SMALL LETTER KAPPA
    0x03bd: chr(0x006b), # ν v GREEK SMALL LETTER NU
    0x03bf: chr(0x006f), # ο o GREEK SMALL LETTER OMICRON
}

middledot_dict = {
    0x0387: chr(0x00b7), # · · Greek and Coptic Greek Ano Teleia
    0x119E: chr(0x00b7), # ᆞ· hangul jamo 아래 아 
    0x2022: chr(0x00b7), # • · general punctuation Bullet
    0x2024: chr(0x00b7), # ․ · general punctuation one dot leader
    0x2027: chr(0x00b7), # ‧ · general punctuation hyphenation point
    0x2219: chr(0x00b7), # ∙ · Mathematical Bullet Operator
    0x22C5: chr(0x00b7), # ⋅ · Mathematical Operators Dot Operator
    0x2981: chr(0x00b7), # ⦁ · Miscellaneous Mathematical Symbols-B Z NOTATION SPOT
    0x30fb: chr(0x00b7), # ・ · katakana middle dot 
    0x318d: chr(0x00b7), # ㆍ · hangul compatibility jamo 아래 아 
    0xff65: chr(0x00b7), # ･ · specials katakana middle dot 
}

ascii_to_half_full = {chr(0xff00 + ascii_code - 32):chr(ascii_code) for ascii_code in range(33, 127)}

empty_circle = {
    # ○ Geometric Shapes white circle 0x25cb
    0x25ef: chr(0x25cb), # ◯ ○ Geometric Shapes Large Circle
    0x26aa: chr(0x25cb), # ⚪ ○ Miscellaneous Symbols MEDIUM WHITE CIRCLE
    0x3007: chr(0x25cb), # 〇 ○ CJK Symbols and Punctuation Ideographic Number Zero

    # ° 0x00b0 상단 위치
    # ◦ Geometric Shapes White Bullet 0x25e6 중단 위치
    0x2218: chr(0x25e6), # ∘ ◦ Mathematical Operators Ring Operator
    0x26AC: chr(0x25e6), # ⚬ ◦ Miscellaneous Symbols Medium Small White Circle
}

cjk_punctu = {
    0xff61: chr(0x3002), # ｡ 。 Halfwidth and Fullwidth Forms Halfwidth Ideographic Full Stop 하단 위치
    0xff62: chr(0x300c), # ｢ 「
    0xff63: chr(0x300d), # ｣ 」
    0xff64: chr(0x3001), # ､ 、
    0x3008: chr(0x003c), # 〈 < CJK Symbols and Punctuation Left Angle Bracket
    0x3009: chr(0x003e), # 〉 > CJK Symbols and Punctuation Right Angle Bracket
}

right_triangle = {
    0x2023:chr(0x25B6), # ‣ ▶ General Punctuation Triangular Bullet
    0x25B8:chr(0x25B6), # ▸ ▶ Geometric Shapes Black Right-Pointing Small Triangle
}

white_square = {
    0x25A2:chr(0x25A1), # ▢ □ Geometric Shapes White Square with Rounded Corners
    0x2610:chr(0x25A1), # ☐ □ Miscellaneous Symbols Ballot Box
}

black_squre = { # end of proof
    0x220e:chr(0x25a0), # ∎ ■ Mathematical Operators End of Proof
    0x25ae:chr(0x25a0), # ▮ ■ Geometric Shapes Black Vertical Rectangle
    0x25fc:chr(0x25a0), # ◼ ■ Geometric Shapes Black Medium Square
    0x25fe:chr(0x25a0), # ◾ ■ Geometric Shapes Black Medium Small Square
}

dingbats_to_enclosed = { chr(encl + 800) : chr(encl) for encl in range(0x2460, 0x246A)}

dingbats_negative_circled = { chr(neg_circ + 20) : chr(neg_circ) for neg_circ in range(0x2776, 0x2780)}
dingbats_to_arrows = {
    0x2794:chr(0x2192), # ➔ → Dingbats Heavy Wide-Headed Rightwards Arrow
    0x279c:chr(0x2192), # ➜ → Dingbats Heavy Round-Tipped Rightwards Arrow
    0x27a0:chr(0x2192), # ➠ → Dingbats Heavy Dashed Triangle-Headed Rightwards Arrow
    0x27a1:chr(0x2192), # ➡ → Dingbats Black Rightwards Arrow
    0x27a5:chr(0x2192), # ➥ → Dingbats Heavy Black Curved Downwards and Rightwards Arrow
    0x27a9:chr(0x21E8), # ➩ ⇨ Dingbats Right-Shaded White Rightwards Arrow
    0x27aa:chr(0x21E8), # ➪ ⇨ Dingbats Left-Shaded White Rightwards Arrow
    0x27ad:chr(0x21E8), # ➭ ⇨ Dingbats Heavy Lower Right-Shadowed White Rightwards Arrow
    0x27ae:chr(0x21E8), # ➮ ⇨ Dingbats Heavy Upper Right-Shadowed White Rightwards Arrow
    0x27f6:chr(0x2192), # ⟶ → Dingbats Long Rightwards Arrow
    0x27f9:chr(0x21D2), # ⟹ ⇒ Dingbats Rightwards Double Arrow
    0x27fa:chr(0x21D4), # ⟺ ⇔ Dingbats LONG LEFT RIGHT DOUBLE ARROW
}

tilde = {
    0x223C:chr(0x007E), # ∼ ~ Mathematical Operators Tilde Operator
    0x301C:chr(0x007E), # 〜 ~ CJK Symbols and Punctuation Operators Wave Dash
}

convert_won_dict = {
    0x5c: chr(0x20a9), # \ ₩ basic latin back slash
    0xffe6: chr(0x20a9), # ￦ ₩ Halfwidth and Fullwidth Forms Fullwidth won sign
}

convert_dict_list = [
    cjk_comp_ideo_to_unif_dict, 
    middledot_dict, 
    ascii_to_half_full, 
    empty_circle, 
    cjk_punctu, 
    right_triangle, 
    white_square, 
    black_squre, 
    dingbats_to_enclosed, 
    dingbats_negative_circled, 
    dingbats_to_arrows, 
    tilde
]